# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ 
    "xhci_pci"
    "ahci" "nvme" "usbhid" "usb_storage"
    "sd_mod" 
    ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  boot.extraModprobeConfig = ''
  '';
fileSystems."/" =
    { device = "/dev/disk/by-uuid/a0bd942b-f872-413e-af27-937ecba187c2";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-d6f45719-99f8-4147-b9c6-6d5e8583b702".device = "/dev/disk/by-uuid/d6f45719-99f8-4147-b9c6-6d5e8583b702";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/4C7A-7E5C";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/64cc1caf-89ca-443f-88a9-05d10cd3a221"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
